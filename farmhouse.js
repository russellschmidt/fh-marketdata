var fmdata = [];
var fmdatafull = [];

const denverZip0 = [80237, 80236]

const denverZip1 = [80237]

const denverZip = [
  80237,
  80236,
  80239,
  80238,
  80243,
  80246,
  80247,
  80250,
  80249,
  80261,
  80263,
  80266,
  80271,
  80291,
  80123,
  80202,
  80201,
  80204,
  80203,
  80206,
  80205,
  80208,
  80207,
  80210,
  80209,
  80212,
  80211,
  80217,
  80216,
  80219,
  80218,
  80221,
  80220,
  80223,
  80222,
  80224,
  80227,
  80231,
  80230,
  80235,
]

const laZip = [
  90895,
  91001,
  91006,
  91007,
  91011,
  91010,
  91016,
  91020,
  91017,
  93510,
  91023,
  91024,
  91030,
  91040,
  91043,
  91042,
  91101,
  91103,
  91105,
  93534,
  91104,
  93532,
  91107,
  93536,
  91106,
  93535,
  91108,
  93543,
  93544,
  91123,
  93551,
  93550,
  93553,
  93552,
  91182,
  93563,
  93590,
  91189,
  91202,
  91201,
  93591,
  91204,
  91203,
  91206,
  91205,
  91208,
  91207,
  91210,
  91214,
  91302,
  91301,
  91304,
  91303,
  91306,
  91307,
  91310,
  92397,
  91311,
  91316,
  91321,
  91325,
  91324,
  91326,
  91331,
  91330,
  91335,
  91340,
  91343,
  91342,
  91345,
  91344,
  91350,
  91346,
  91352,
  91351,
  91354,
  91356,
  91355,
  91357,
  91361,
  91364,
  91367,
  91365,
  91381,
  91383,
  91384,
  91387,
  91390,
  91402,
  91401,
  91403,
  91406,
  91405,
  91411,
  91423,
  91436,
  91495,
  91501,
  91502,
  91505,
  91504,
  91506,
  91602,
  91601,
  91604,
  91606,
  91605,
  91608,
  91607,
  91614,
  91706,
  91702,
  91711,
  91722,
  91724,
  91723,
  91732,
  91731,
  91733,
  91735,
  91740,
  91741,
  91745,
  91744,
  91747,
  91746,
  91748,
  90002,
  91750,
  90001,
  90004,
  91755,
  91754,
  90003,
  90006,
  90005,
  90008,
  91759,
  90007,
  90010,
  90009,
  90012,
  91765,
  90011,
  90014,
  91767,
  91766,
  90013,
  90016,
  91768,
  90015,
  90018,
  90017,
  91770,
  91773,
  90020,
  91772,
  90019,
  91776,
  90022,
  90021,
  91775,
  91780,
  90024,
  91778,
  90023,
  90026,
  90025,
  90028,
  90027,
  91790,
  91789,
  90029,
  90032,
  91792,
  91791,
  90031,
  90034,
  91793,
  90033,
  90036,
  90035,
  90038,
  91801,
  90037,
  90040,
  91803,
  90039,
  90042,
  90041,
  90044,
  90043,
  90046,
  90045,
  90048,
  90047,
  90049,
  90052,
  90056,
  90058,
  90057,
  90060,
  90059,
  90062,
  90061,
  90064,
  90063,
  90066,
  90065,
  90068,
  90067,
  90069,
  90071,
  90074,
  90077,
  91008,
  90084,
  90089,
  90095,
  90094,
  90096,
  90201,
  90189,
  90211,
  90210,
  90212,
  90221,
  90220,
  90222,
  90230,
  90232,
  90241,
  90240,
  90245,
  90242,
  90248,
  90247,
  90250,
  90249,
  90254,
  90260,
  90255,
  90262,
  90264,
  90263,
  90266,
  90265,
  90270,
  90274,
  90272,
  90277,
  90275,
  90280,
  90278,
  90291,
  90290,
  90293,
  90292,
  90295,
  90294,
  90301,
  90296,
  90303,
  90302,
  90305,
  90304,
  90402,
  90401,
  90404,
  90403,
  90406,
  93243,
  90405,
  90501,
  90503,
  90502,
  90505,
  90504,
  90508,
  90601,
  90603,
  90602,
  90605,
  90604,
  90606,
  90631,
  90639,
  90638,
  90650,
  90640,
  90660,
  90670,
  90702,
  90701,
  90704,
  90703,
  90706,
  90710,
  90713,
  90712,
  90715,
  90717,
  90716,
  90731,
  90723,
  90733,
  90732,
  90745,
  90744,
  90747,
  90746,
  90755,
  90803,
  90802,
  90805,
  90804,
  90807,
  90806,
  90808,
  90813,
  90810,
  90815,
  90814,
  90840,
]

const ocZip = [
  92806,
  92805,
  92808,
  92807,
  92815,
  92823,
  92822,
  92831,
  92833,
  92832,
  92835,
  92840,
  92841,
  92844,
  92843,
  92845,
  92861,
  92865,
  92867,
  92866,
  92869,
  92868,
  92870,
  92885,
  92887,
  92886,
  92602,
  92604,
  92603,
  92606,
  92605,
  92607,
  92612,
  92610,
  92615,
  90621,
  92614,
  90620,
  92617,
  90623,
  92616,
  90630,
  92618,
  92620,
  92625,
  92624,
  92627,
  92626,
  92629,
  92637,
  92630,
  92647,
  92646,
  92649,
  92648,
  92651,
  92653,
  90680,
  92655,
  92657,
  92656,
  92661,
  92660,
  92663,
  92662,
  92677,
  92676,
  90720,
  92679,
  92678,
  92683,
  92688,
  90740,
  92691,
  90743,
  90742,
  92692,
  92697,
  92694,
  92701,
  92703,
  92705,
  92704,
  92707,
  92706,
  92708,
  92780,
  92782,
  92802,
  92801,
  92804,
]

const sdZip = [
  91902,
  91901,
  91905,
  91908,
  91906,
  91910,
  91911,
  91914,
  91913,
  91916,
  91915,
  91917,
  91932,
  91931,
  91934,
  91941,
  91935,
  91942,
  91945,
  91950,
  91948,
  91962,
  91963,
  91978,
  91977,
  91980,
  92004,
  92003,
  92008,
  92007,
  92010,
  92009,
  92011,
  92018,
  92014,
  92020,
  92019,
  92021,
  92024,
  92026,
  92025,
  92028,
  92027,
  92029,
  92036,
  92033,
  92037,
  92040,
  92052,
  92054,
  92057,
  92056,
  92059,
  92058,
  92061,
  92060,
  92065,
  92064,
  92067,
  92066,
  92069,
  92071,
  92070,
  92078,
  92075,
  92081,
  92083,
  92082,
  92084,
  92086,
  92091,
  92093,
  92092,
  92101,
  92096,
  92103,
  92102,
  92105,
  92104,
  92107,
  92106,
  92109,
  92108,
  92111,
  92110,
  92113,
  92112,
  92115,
  92114,
  92117,
  92116,
  92119,
  92118,
  92121,
  92120,
  92123,
  92122,
  92126,
  92124,
  92128,
  92127,
  92130,
  92129,
  92132,
  92131,
  92134,
  92136,
  92135,
  92138,
  92140,
  92139,
  92145,
  92155,
  92154,
  92159,
  92158,
  92171,
  92173,
  92177,
  92178,
  92182,
  92672,
]

function getMarket(callback) {
  zipArray = sdZip;
  getMarketList(zipArray)
  callback
}


function getMarketList(zipArray) {
  for (var i = 0; i < zipArray.length; i++ ) {
    setTimeout(
      getMarketId(zipArray[i]), 2500
    )
    
  }
}

function getMarketId(zip) {
  const url = "https://search.ams.usda.gov/farmersmarkets/v1/data.svc/zipSearch?zip=" + zip;
  fetch(url)
    .then(res => res.json())
    .then(data => data.results)
    .then(data => {
      for (var i = 0; i < data.length; i++) {
        getMarketDetail(data[i].id, data[i].marketname, zip)
      }
    })
}

function getMarketDetail(id, name = 'unavailable', zip) {
  const url = "https://search.ams.usda.gov/farmersmarkets/v1/data.svc/mktDetail?id=" + id;
  fetch(url)
    .then(res => res.json())
    .then(data => fmdata.push({zip, name, ...data.marketdetails}))
}

function convertArrayOfObjectsToCSV(args) {
  var result, ctr, keys, columnDelimiter, lineDelimiter, data, entry;

  data = args.data || null;
  if (data == null || !data.length) {
    return null;
  }

  columnDelimiter = args.columnDelimiter || ',';
  lineDelimiter = args.lineDelimiter || '\n';

  keys = Object.keys(data[0]);

  result = '';
  result += keys.join(columnDelimiter);
  result += lineDelimiter;

  data.forEach(function(item) {
    ctr = 0;
    keys.forEach(function(key) {
      if (ctr > 0) {
        result += columnDelimiter;
      }
      result += item[key];
      ctr++;
    })
    result += lineDelimiter;
  })

  return result;
}

function downloadCSV(args) {
  var data, filename, link;
  scrubCommasFromArrayOfObjects(fmdata)
  var csv = convertArrayOfObjectsToCSV({data: fmdata});

  if (csv == null) return;

  filename = args.filename || 'export.csv';
  
  if (!csv.match(/^data:text\/csv/i)) {
    csv = 'data:text/csv;charset=utf-8,' + csv;
  }

  data = encodeURI(csv);

  link = document.createElement('a');
  link.setAttribute('href', data);
  link.setAttribute('download', filename);
  link.click();
}

function scrubCommasFromArrayOfObjects(data) {
  for (var i = 0; i < data.length; i++) {
    const keys = Object.keys(data[i])
    for (const key of keys) {
      const raw = data[i][key]
      var poo = ''
      if (typeof(raw) === "string") {
        poo = raw.replace(/,/g, "|")
        data[i][key] = poo
      }
    }
  }
}